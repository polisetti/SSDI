package com.test.model.view;

import com.test.model.entity.PortfolioStocksEOImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Mar 22 13:23:43 EDT 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PortfolioStocksVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dateadded {
            public Object get(PortfolioStocksVORowImpl obj) {
                return obj.getDateadded();
            }

            public void put(PortfolioStocksVORowImpl obj, Object value) {
                obj.setDateadded((Number)value);
            }
        }
        ,
        Portfolioid {
            public Object get(PortfolioStocksVORowImpl obj) {
                return obj.getPortfolioid();
            }

            public void put(PortfolioStocksVORowImpl obj, Object value) {
                obj.setPortfolioid((Number)value);
            }
        }
        ,
        Stockid {
            public Object get(PortfolioStocksVORowImpl obj) {
                return obj.getStockid();
            }

            public void put(PortfolioStocksVORowImpl obj, Object value) {
                obj.setStockid((Number)value);
            }
        }
        ,
        Timeadded {
            public Object get(PortfolioStocksVORowImpl obj) {
                return obj.getTimeadded();
            }

            public void put(PortfolioStocksVORowImpl obj, Object value) {
                obj.setTimeadded((Number)value);
            }
        }
        ,
        RowID {
            public Object get(PortfolioStocksVORowImpl obj) {
                return obj.getRowID();
            }

            public void put(PortfolioStocksVORowImpl obj, Object value) {
                obj.setRowID((RowID)value);
            }
        }
        ,
        Selection {
            public Object get(PortfolioStocksVORowImpl obj) {
                return obj.getSelection();
            }

            public void put(PortfolioStocksVORowImpl obj, Object value) {
                obj.setSelection((Boolean)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PortfolioStocksVORowImpl object);

        public abstract void put(PortfolioStocksVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DATEADDED = AttributesEnum.Dateadded.index();
    public static final int PORTFOLIOID = AttributesEnum.Portfolioid.index();
    public static final int STOCKID = AttributesEnum.Stockid.index();
    public static final int TIMEADDED = AttributesEnum.Timeadded.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int SELECTION = AttributesEnum.Selection.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PortfolioStocksVORowImpl() {
    }

    /**
     * Gets PortfolioStocksEO entity object.
     * @return the PortfolioStocksEO
     */
    public PortfolioStocksEOImpl getPortfolioStocksEO() {
        return (PortfolioStocksEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for DATEADDED using the alias name Dateadded.
     * @return the DATEADDED
     */
    public Number getDateadded() {
        return (Number) getAttributeInternal(DATEADDED);
    }

    /**
     * Sets <code>value</code> as attribute value for DATEADDED using the alias name Dateadded.
     * @param value value to set the DATEADDED
     */
    public void setDateadded(Number value) {
        setAttributeInternal(DATEADDED, value);
    }

    /**
     * Gets the attribute value for PORTFOLIOID using the alias name Portfolioid.
     * @return the PORTFOLIOID
     */
    public Number getPortfolioid() {
        return (Number) getAttributeInternal(PORTFOLIOID);
    }

    /**
     * Sets <code>value</code> as attribute value for PORTFOLIOID using the alias name Portfolioid.
     * @param value value to set the PORTFOLIOID
     */
    public void setPortfolioid(Number value) {
        setAttributeInternal(PORTFOLIOID, value);
    }

    /**
     * Gets the attribute value for STOCKID using the alias name Stockid.
     * @return the STOCKID
     */
    public Number getStockid() {
        return (Number) getAttributeInternal(STOCKID);
    }

    /**
     * Sets <code>value</code> as attribute value for STOCKID using the alias name Stockid.
     * @param value value to set the STOCKID
     */
    public void setStockid(Number value) {
        setAttributeInternal(STOCKID, value);
    }

    /**
     * Gets the attribute value for TIMEADDED using the alias name Timeadded.
     * @return the TIMEADDED
     */
    public Number getTimeadded() {
        return (Number) getAttributeInternal(TIMEADDED);
    }

    /**
     * Sets <code>value</code> as attribute value for TIMEADDED using the alias name Timeadded.
     * @param value value to set the TIMEADDED
     */
    public void setTimeadded(Number value) {
        setAttributeInternal(TIMEADDED, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public RowID getRowID() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(RowID value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Selection.
     * @return the Selection
     */
    public Boolean getSelection() {
        return (Boolean) getAttributeInternal(SELECTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Selection.
     * @param value value to set the  Selection
     */
    public void setSelection(Boolean value) {
        setAttributeInternal(SELECTION, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
